{"ast":null,"code":"import _slicedToArray from \"/home/rahulvig/Desktop/React Udemy/Contact-Keeper-MERN-App/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rahulvig/Desktop/React Udemy/Contact-Keeper-MERN-App/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport uuid from \"uuid\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      type: \"personal\",\n      id: 1,\n      name: \"Ted Johnson\",\n      email: \"ted@gmail.com\",\n      phone: \"917-517-7222\"\n    }, {\n      type: \"professional\",\n      id: 2,\n      name: \"Sarah Smith\",\n      email: \"sarah@gmail.com\",\n      phone: \"917-517-7892\"\n    }],\n    current: null,\n    filtered: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add contact\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter contacts\n  //Clear filter\n\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/home/rahulvig/Desktop/React Udemy/Contact-Keeper-MERN-App/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","type","id","name","email","phone","current","filtered","state","dispatch","addContact","contact","v4","payload","deleteContact","setCurrent","clearCurrent","updateContact","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP;;AAUA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEC,MAAAA,IAAI,EAAE,aAHR;AAIEC,MAAAA,KAAK,EAAE,eAJT;AAKEC,MAAAA,KAAK,EAAE;AALT,KADQ,EAQR;AACEJ,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEC,MAAAA,IAAI,EAAE,aAHR;AAIEC,MAAAA,KAAK,EAAE,iBAJT;AAKEC,MAAAA,KAAK,EAAE;AALT,KARQ,CADS;AAiBnBC,IAAAA,OAAO,EAAE,IAjBU;AAkBnBC,IAAAA,QAAQ,EAAE;AAlBS,GAArB;;AAD4B,sBAsBFrB,UAAU,CAACG,cAAD,EAAiBU,YAAjB,CAtBR;AAAA;AAAA,QAsBrBS,KAtBqB;AAAA,QAsBdC,QAtBc,oBAwB5B;;;AACA,QAAMC,UAAU,GAAGC,OAAO,IAAI;AAC5BA,IAAAA,OAAO,CAACT,EAAR,GAAaf,IAAI,CAACyB,EAAL,EAAb;AACAH,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAEX,WAAR;AAAqBuB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACD,GAHD,CAzB4B,CA8B5B;;;AACA,QAAMG,aAAa,GAAGZ,EAAE,IAAI;AAC1BO,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAEV,cAAR;AAAwBsB,MAAAA,OAAO,EAAEX;AAAjC,KAAD,CAAR;AACD,GAFD,CA/B4B,CAmC5B;;;AACA,QAAMa,UAAU,GAAGJ,OAAO,IAAI;AAC5BF,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAET,WAAR;AAAqBqB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACD,GAFD,CApC4B,CAwC5B;;;AACA,QAAMK,YAAY,GAAG,MAAM;AACzBP,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACD,GAFD,CAzC4B,CA6C5B;;;AACA,QAAMwB,aAAa,GAAGN,OAAO,IAAI;AAC/BF,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAEP,cAAR;AAAwBmB,MAAAA,OAAO,EAAEF;AAAjC,KAAD,CAAR;AACD,GAFD,CA9C4B,CAkD5B;AAEA;;;AAEA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,QAAQ,EAAEQ,KAAK,CAACR,QADX;AAELM,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFV;AAGLI,MAAAA,UAHK;AAILI,MAAAA,aAJK;AAKLC,MAAAA,UALK;AAMLC,MAAAA,YANK;AAOLC,MAAAA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGnB,KAAK,CAACoB,QAXT,CADF;AAeD,CArED;;AAuEA,eAAerB,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport uuid from \"uuid\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER\n} from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [\n      {\n        type: \"personal\",\n        id: 1,\n        name: \"Ted Johnson\",\n        email: \"ted@gmail.com\",\n        phone: \"917-517-7222\"\n      },\n      {\n        type: \"professional\",\n        id: 2,\n        name: \"Sarah Smith\",\n        email: \"sarah@gmail.com\",\n        phone: \"917-517-7892\"\n      }\n    ],\n    current: null,\n    filtered: null\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  //Add contact\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n\n  //Delete contact\n  const deleteContact = id => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n\n  //Set current contact\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  //Clear current contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  //Update contact\n  const updateContact = contact => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n\n  //Filter contacts\n\n  //Clear filter\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}